from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score

iris = load_iris()
X, y = iris.data, iris.target

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

k = 5
knn = KNeighborsClassifier(n_neighbors=k)
knn.fit(X_train, y_train)

y_pred = knn.predict(X_test)

correct, incorrect = [], []

for i in range(len(y_test)):
    if y_pred[i] == y_test[i]:
        correct.append((X_test[i], y_pred[i], y_test[i]))
    else:
        incorrect.append((X_test[i], y_pred[i], y_test[i]))

print("\nCorrect Predictions:")
for sample, predicted, actual in correct:
    print(f"Sample: {sample}, Predicted: {iris.target_names[predicted]}, Actual: {iris.target_names[actual]}")

print("\nIncorrect Predictions:")
for sample, predicted, actual in incorrect:
    print(f"Sample: {sample}, Predicted: {iris.target_names[predicted]}, Actual: {iris.target_names[actual]}")

accuracy = accuracy_score(y_test, y_pred)
print(f"\nModel Accuracy: {accuracy * 100:.2f}%")
